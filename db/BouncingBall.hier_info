|BouncingBall
horiz_sync_out <= ball:inst1.Horiz_sync
bt2 => ball:inst1.PB1
bt2 => ball:inst1.PB2
clk => pll:inst3.inclk0
bt0 => ball:inst1.left_button
bt0 => inst0.IN0
SW[0] => ball:inst1.buttons[0]
SW[1] => ball:inst1.buttons[1]
SW[2] => ball:inst1.buttons[2]
SW[3] => ball:inst1.buttons[3]
SW[4] => ball:inst1.buttons[4]
SW[5] => ball:inst1.buttons[5]
SW[6] => ball:inst1.buttons[6]
SW[7] => ball:inst1.buttons[7]
SW[8] => ball:inst1.buttons[8]
vert_sync_out <= ball:inst1.Vert_sync
LEDG[0] <= lfsr:inst2.num[0]
LEDG[1] <= lfsr:inst2.num[1]
LEDG[2] <= lfsr:inst2.num[2]
LEDG[3] <= lfsr:inst2.num[3]
LEDG[4] <= lfsr:inst2.num[4]
LEDG[5] <= lfsr:inst2.num[5]
LEDG[6] <= lfsr:inst2.num[6]
LEDG[7] <= lfsr:inst2.num[7]
LEDG[8] <= lfsr:inst2.num[8]
LEDG[9] <= lfsr:inst2.num[9]
VGA_B[0] <= ball:inst1.Blue[0]
VGA_B[1] <= ball:inst1.Blue[1]
VGA_B[2] <= ball:inst1.Blue[2]
VGA_B[3] <= ball:inst1.Blue[3]
VGA_G[0] <= ball:inst1.Green[0]
VGA_G[1] <= ball:inst1.Green[1]
VGA_G[2] <= ball:inst1.Green[2]
VGA_G[3] <= ball:inst1.Green[3]
VGA_R[0] <= ball:inst1.Red[0]
VGA_R[1] <= ball:inst1.Red[1]
VGA_R[2] <= ball:inst1.Red[2]
VGA_R[3] <= ball:inst1.Red[3]


|BouncingBall|ball:inst1
PB1 => ~NO_FANOUT~
PB2 => ~NO_FANOUT~
Clock => vga_sync:SYNC.clock_25Mhz
left_button => counter.OUTPUTSELECT
left_button => counter.OUTPUTSELECT
left_button => counter.OUTPUTSELECT
left_button => counter.OUTPUTSELECT
left_button => counter.OUTPUTSELECT
left_button => counter.OUTPUTSELECT
left_button => counter.OUTPUTSELECT
left_button => counter.OUTPUTSELECT
left_button => counter.OUTPUTSELECT
left_button => counter.OUTPUTSELECT
left_button => Ball_Y_motion.DATAB
left_button => counter.OUTPUTSELECT
left_button => counter.OUTPUTSELECT
left_button => counter.OUTPUTSELECT
left_button => counter.OUTPUTSELECT
left_button => counter.OUTPUTSELECT
left_button => counter.OUTPUTSELECT
left_button => counter.OUTPUTSELECT
left_button => counter.OUTPUTSELECT
left_button => counter.OUTPUTSELECT
left_button => counter.OUTPUTSELECT
left_button => Ball_Y_motion.DATAB
left_button => Ball_Y_motion.DATAB
left_button => Ball_Y_motion.DATAB
left_button => Ball_Y_motion.DATAA
left_button => Ball_Y_motion.DATAA
buttons[0] => Red_Data.IN1
buttons[1] => Red_Data.IN1
buttons[2] => Red_Data.IN1
buttons[3] => Green_Data.IN1
buttons[4] => Green_Data.IN1
buttons[5] => Green_Data.IN1
buttons[6] => Blue_Data.IN1
buttons[7] => Blue_Data.IN1
buttons[8] => Blue_Data.IN1
Red[0] <= vga_sync:SYNC.red_out[0]
Red[1] <= vga_sync:SYNC.red_out[1]
Red[2] <= vga_sync:SYNC.red_out[2]
Red[3] <= vga_sync:SYNC.red_out[3]
Green[0] <= vga_sync:SYNC.green_out[0]
Green[1] <= vga_sync:SYNC.green_out[1]
Green[2] <= vga_sync:SYNC.green_out[2]
Green[3] <= vga_sync:SYNC.green_out[3]
Blue[0] <= vga_sync:SYNC.blue_out[0]
Blue[1] <= vga_sync:SYNC.blue_out[1]
Blue[2] <= vga_sync:SYNC.blue_out[2]
Blue[3] <= vga_sync:SYNC.blue_out[3]
Horiz_sync <= vga_sync:SYNC.horiz_sync_out
Vert_sync <= vga_sync:SYNC.vert_sync_out


|BouncingBall|ball:inst1|VGA_SYNC:SYNC
clock_25Mhz => vert_sync_out~reg0.CLK
clock_25Mhz => horiz_sync_out~reg0.CLK
clock_25Mhz => blue_out[0]~reg0.CLK
clock_25Mhz => blue_out[1]~reg0.CLK
clock_25Mhz => blue_out[2]~reg0.CLK
clock_25Mhz => blue_out[3]~reg0.CLK
clock_25Mhz => green_out[0]~reg0.CLK
clock_25Mhz => green_out[1]~reg0.CLK
clock_25Mhz => green_out[2]~reg0.CLK
clock_25Mhz => green_out[3]~reg0.CLK
clock_25Mhz => red_out[0]~reg0.CLK
clock_25Mhz => red_out[1]~reg0.CLK
clock_25Mhz => red_out[2]~reg0.CLK
clock_25Mhz => red_out[3]~reg0.CLK
clock_25Mhz => pixel_row[0]~reg0.CLK
clock_25Mhz => pixel_row[1]~reg0.CLK
clock_25Mhz => pixel_row[2]~reg0.CLK
clock_25Mhz => pixel_row[3]~reg0.CLK
clock_25Mhz => pixel_row[4]~reg0.CLK
clock_25Mhz => pixel_row[5]~reg0.CLK
clock_25Mhz => pixel_row[6]~reg0.CLK
clock_25Mhz => pixel_row[7]~reg0.CLK
clock_25Mhz => pixel_row[8]~reg0.CLK
clock_25Mhz => pixel_row[9]~reg0.CLK
clock_25Mhz => video_on_v.CLK
clock_25Mhz => pixel_column[0]~reg0.CLK
clock_25Mhz => pixel_column[1]~reg0.CLK
clock_25Mhz => pixel_column[2]~reg0.CLK
clock_25Mhz => pixel_column[3]~reg0.CLK
clock_25Mhz => pixel_column[4]~reg0.CLK
clock_25Mhz => pixel_column[5]~reg0.CLK
clock_25Mhz => pixel_column[6]~reg0.CLK
clock_25Mhz => pixel_column[7]~reg0.CLK
clock_25Mhz => pixel_column[8]~reg0.CLK
clock_25Mhz => pixel_column[9]~reg0.CLK
clock_25Mhz => video_on_h.CLK
clock_25Mhz => vert_sync.CLK
clock_25Mhz => v_count[0].CLK
clock_25Mhz => v_count[1].CLK
clock_25Mhz => v_count[2].CLK
clock_25Mhz => v_count[3].CLK
clock_25Mhz => v_count[4].CLK
clock_25Mhz => v_count[5].CLK
clock_25Mhz => v_count[6].CLK
clock_25Mhz => v_count[7].CLK
clock_25Mhz => v_count[8].CLK
clock_25Mhz => v_count[9].CLK
clock_25Mhz => horiz_sync.CLK
clock_25Mhz => h_count[0].CLK
clock_25Mhz => h_count[1].CLK
clock_25Mhz => h_count[2].CLK
clock_25Mhz => h_count[3].CLK
clock_25Mhz => h_count[4].CLK
clock_25Mhz => h_count[5].CLK
clock_25Mhz => h_count[6].CLK
clock_25Mhz => h_count[7].CLK
clock_25Mhz => h_count[8].CLK
clock_25Mhz => h_count[9].CLK
red[0] => red_out.IN1
red[1] => red_out.IN1
red[2] => red_out.IN1
red[3] => red_out.IN1
green[0] => green_out.IN1
green[1] => green_out.IN1
green[2] => green_out.IN1
green[3] => green_out.IN1
blue[0] => blue_out.IN1
blue[1] => blue_out.IN1
blue[2] => blue_out.IN1
blue[3] => blue_out.IN1
red_out[0] <= red_out[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
red_out[1] <= red_out[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
red_out[2] <= red_out[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
red_out[3] <= red_out[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
green_out[0] <= green_out[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
green_out[1] <= green_out[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
green_out[2] <= green_out[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
green_out[3] <= green_out[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
blue_out[0] <= blue_out[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
blue_out[1] <= blue_out[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
blue_out[2] <= blue_out[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
blue_out[3] <= blue_out[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
horiz_sync_out <= horiz_sync_out~reg0.DB_MAX_OUTPUT_PORT_TYPE
vert_sync_out <= vert_sync_out~reg0.DB_MAX_OUTPUT_PORT_TYPE
pixel_row[0] <= pixel_row[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
pixel_row[1] <= pixel_row[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
pixel_row[2] <= pixel_row[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
pixel_row[3] <= pixel_row[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
pixel_row[4] <= pixel_row[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
pixel_row[5] <= pixel_row[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
pixel_row[6] <= pixel_row[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
pixel_row[7] <= pixel_row[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
pixel_row[8] <= pixel_row[8]~reg0.DB_MAX_OUTPUT_PORT_TYPE
pixel_row[9] <= pixel_row[9]~reg0.DB_MAX_OUTPUT_PORT_TYPE
pixel_column[0] <= pixel_column[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
pixel_column[1] <= pixel_column[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
pixel_column[2] <= pixel_column[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
pixel_column[3] <= pixel_column[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
pixel_column[4] <= pixel_column[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
pixel_column[5] <= pixel_column[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
pixel_column[6] <= pixel_column[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
pixel_column[7] <= pixel_column[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
pixel_column[8] <= pixel_column[8]~reg0.DB_MAX_OUTPUT_PORT_TYPE
pixel_column[9] <= pixel_column[9]~reg0.DB_MAX_OUTPUT_PORT_TYPE


|BouncingBall|pll:inst3
inclk0 => altpll:altpll_component.inclk[0]
c0 <= altpll:altpll_component.clk[0]


|BouncingBall|pll:inst3|altpll:altpll_component
inclk[0] => pll_altpll:auto_generated.inclk[0]
inclk[1] => pll_altpll:auto_generated.inclk[1]
fbin => ~NO_FANOUT~
pllena => ~NO_FANOUT~
clkswitch => ~NO_FANOUT~
areset => ~NO_FANOUT~
pfdena => ~NO_FANOUT~
clkena[0] => ~NO_FANOUT~
clkena[1] => ~NO_FANOUT~
clkena[2] => ~NO_FANOUT~
clkena[3] => ~NO_FANOUT~
clkena[4] => ~NO_FANOUT~
clkena[5] => ~NO_FANOUT~
extclkena[0] => ~NO_FANOUT~
extclkena[1] => ~NO_FANOUT~
extclkena[2] => ~NO_FANOUT~
extclkena[3] => ~NO_FANOUT~
scanclk => ~NO_FANOUT~
scanclkena => ~NO_FANOUT~
scanaclr => ~NO_FANOUT~
scanread => ~NO_FANOUT~
scanwrite => ~NO_FANOUT~
scandata => ~NO_FANOUT~
phasecounterselect[0] => ~NO_FANOUT~
phasecounterselect[1] => ~NO_FANOUT~
phasecounterselect[2] => ~NO_FANOUT~
phasecounterselect[3] => ~NO_FANOUT~
phaseupdown => ~NO_FANOUT~
phasestep => ~NO_FANOUT~
configupdate => ~NO_FANOUT~
fbmimicbidir <> <GND>
clk[0] <= clk[0].DB_MAX_OUTPUT_PORT_TYPE
clk[1] <= clk[1].DB_MAX_OUTPUT_PORT_TYPE
clk[2] <= clk[2].DB_MAX_OUTPUT_PORT_TYPE
clk[3] <= clk[3].DB_MAX_OUTPUT_PORT_TYPE
clk[4] <= clk[4].DB_MAX_OUTPUT_PORT_TYPE
extclk[0] <= <GND>
extclk[1] <= <GND>
extclk[2] <= <GND>
extclk[3] <= <GND>
clkbad[0] <= <GND>
clkbad[1] <= <GND>
enable1 <= <GND>
enable0 <= <GND>
activeclock <= <GND>
clkloss <= <GND>
locked <= <GND>
scandataout <= <GND>
scandone <= <GND>
sclkout0 <= <GND>
sclkout1 <= <GND>
phasedone <= <GND>
vcooverrange <= <GND>
vcounderrange <= <GND>
fbout <= <GND>
fref <= <GND>
icdrclk <= <GND>


|BouncingBall|pll:inst3|altpll:altpll_component|pll_altpll:auto_generated
clk[0] <= pll1.CLK
clk[1] <= pll1.CLK1
clk[2] <= pll1.CLK2
clk[3] <= pll1.CLK3
clk[4] <= pll1.CLK4
inclk[0] => pll1.CLK
inclk[1] => pll1.CLK1


|BouncingBall|lfsr:inst2
clk => tmp[1].CLK
clk => tmp[2].CLK
clk => tmp[3].CLK
clk => tmp[4].CLK
clk => tmp[5].CLK
clk => tmp[6].CLK
clk => tmp[7].CLK
clk => tmp[8].CLK
clk => tmp[9].CLK
clk => tmp[10].CLK
enable => tmp[10].ENA
enable => tmp[1].ENA
enable => tmp[2].ENA
enable => tmp[3].ENA
enable => tmp[4].ENA
enable => tmp[5].ENA
enable => tmp[6].ENA
enable => tmp[7].ENA
enable => tmp[8].ENA
enable => tmp[9].ENA
reset => tmp[1].ACLR
reset => tmp[2].PRESET
reset => tmp[3].PRESET
reset => tmp[4].ACLR
reset => tmp[5].PRESET
reset => tmp[6].ACLR
reset => tmp[7].PRESET
reset => tmp[8].ACLR
reset => tmp[9].PRESET
reset => tmp[10].ACLR
num[0] <= tmp[1].DB_MAX_OUTPUT_PORT_TYPE
num[1] <= tmp[2].DB_MAX_OUTPUT_PORT_TYPE
num[2] <= tmp[3].DB_MAX_OUTPUT_PORT_TYPE
num[3] <= tmp[4].DB_MAX_OUTPUT_PORT_TYPE
num[4] <= tmp[5].DB_MAX_OUTPUT_PORT_TYPE
num[5] <= tmp[6].DB_MAX_OUTPUT_PORT_TYPE
num[6] <= tmp[7].DB_MAX_OUTPUT_PORT_TYPE
num[7] <= tmp[8].DB_MAX_OUTPUT_PORT_TYPE
num[8] <= tmp[9].DB_MAX_OUTPUT_PORT_TYPE
num[9] <= tmp[10].DB_MAX_OUTPUT_PORT_TYPE


